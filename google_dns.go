package main

import (
	"encoding/json"
	"flag"
	"io/ioutil"
	"net/http"
	"os"
	"time"

	logs "github.com/kpango/glg"
)

var name string

const (
	google_dns_url = "https://dns.google.com/resolve?name="
)

func init() {

	flag.StringVar(&name, "name", "ylck.me", "-name ylck.me")
	flag.Parse()

}
func main() {
	t1 := time.Now()
	type AutoGenerated struct {
		Status   int  `json:"Status"`
		TC       bool `json:"TC"`
		RD       bool `json:"RD"`
		RA       bool `json:"RA"`
		AD       bool `json:"AD"`
		CD       bool `json:"CD"`
		Question []struct {
			Name string `json:"name"`
			Type int    `json:"type"`
		} `json:"Question"`
		Answer []struct {
			Name string `json:"name"`
			Type int    `json:"type"`
			TTL  int    `json:"TTL"`
			Data string `json:"data"`
		} `json:"Answer"`
	}
	var A AutoGenerated
	url := google_dns_url + name
	logs.Debug(url)
	resp, err := http.Get(url)
	if err != nil {
		logs.Error(err)
	}
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		logs.Error(err)
	}
	json.Unmarshal(body, &A)
	IPDATA := A.Answer[0].Data
	logs.Infof("%s : %s", name, IPDATA)
	logs.Success(time.Since(t1))
	os.Exit(0)
}
